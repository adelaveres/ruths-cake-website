---
import "leaflet/dist/leaflet.css"; // Import Leaflet styles

//Set default map options and allow customization through props

const { lat = 47.800600, lng = 22.905210, zoom = 16 } = Astro.props;
---

<!-- Pass lat, lng, and zoom as data attributes on the map div  -->
<div 
  id="map" 
  style="height: 100%; 
  width: 100%;
  box-shadow: 0px 0px 10px grey;
  border-radius: 10px;z-index: 1;"
  data-lat={lat}
  data-lng={lng}
  data-zoom={zoom}
></div>

<script>
  import L from "leaflet"; // Import Leaflet

  // Initialize map function
  function initMap() {
     // Access the map div and retrieve data attributes
    const mapElement = document.getElementById("map");
    const lat = parseFloat(mapElement.getAttribute("data-lat"));
    const lng = parseFloat(mapElement.getAttribute("data-lng"));
    const zoom = parseInt(mapElement.getAttribute("data-zoom"), 10);

    
    // Initialize the map using the retrieved values
    setTimeout(() => {
      map.invalidateSize();
      map.setView([47.800600, 22.905210], 16); // Explicitly recenter after invalidating size
    }, 100);
    const map = L.map("map");
    
    
    // Use OpenStreetMap tiles
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution:
        '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
    }).addTo(map);

    // Add a marker to the specified location
    const markerIcon = L.icon({
      iconUrl: '/images/marker-icon.png', // Path to the marker icon in the public folder
      iconSize: [25, 41],          // [width, height] of the icon
      iconAnchor: [12, 41],        // Point of the icon that corresponds to the marker's location
      popupAnchor: [1, -34],       // Point from which the popup should open
      shadowUrl: '/images/marker-shadow.png', // Optional shadow image
      shadowSize: [41, 41],        // [width, height] of the shadow
      shadowAnchor: [12, 41],  
    });

// Add a marker to the map using the custom icon
    L.marker([lat, lng], { icon: markerIcon }).addTo(map)
      .bindPopup("Ruth's Cake - Cakeshop")
  }


  // Run the map initialization after the component is mounted
  initMap();
</script>
